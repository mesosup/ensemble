---
- name: Update package repo cache
  apt: update_cache=yes
  sudo: yes
  tags:
    - update_cache
    - packages

- name: Install Linux kernel image
  apt: name="linux-image-{{kernel_version}}" state=present
  sudo: yes
  tags:
    - kernel_install

- name: Install Linux kernel image extras
  apt: name="linux-image-extra-{{kernel_version}}" state=present
  sudo: yes
  tags:
    - kernel_install

- name: Install Linux kernel headers
  apt: name="linux-headers-{{kernel_version}}" state=present
  sudo: yes
  tags:
    - kernel_install

- name: Install Linux common tools
  apt: name="linux-tools-common" state=present
  sudo: yes
  tags:
    - kernel_install

- name: "Install Linux tools for {{kernel_version}}"
  apt: name="linux-tools-{{kernel_version}}" state=present
  sudo: yes
  tags:
    - kernel_install

- name: "Install Linux cloud tools for {{kernel_version}}"
  apt: name="linux-cloud-tools-{{kernel_version}}" state=present
  sudo: yes
  tags:
    - kernel_install

- name: Set swappiness to 1 in sysctl
  sysctl: name=vm.swappiness value=1 state=present
  notify: reload sysctl
  sudo: yes
  tags:
    - sysctl

- name: Load nf_conntrack kernel module
  modprobe: name=nf_conntrack state=present
  sudo: yes
  tags:
    - nf_conntrack

- name: Add nf_conntrack to /etc/modules
  lineinfile: state=present dest=/etc/modules backup=yes regexp="nf_conntrack$" line="nf_conntrack"
  notify: reload sysctl
  sudo: yes
  tags:
    - nf_conntrack

- name: Set nf_conntrack_max in sysctl
  sysctl: name=net.netfilter.nf_conntrack_max value={{ ansible_memtotal_mb * 32|int }} state=present
  notify: reload sysctl
  sudo: yes
  tags:
    - nf_conntrack

- name: Configure kernel parameters
  lineinfile: "state=present dest=/etc/default/grub backup=yes
      regexp='^GRUB_CMDLINE_LINUX_DEFAULT'
      line='GRUB_CMDLINE_LINUX_DEFAULT=\"cgroup_enable=memory swapaccount=1 transparent_hugepage=never\"'"
  notify: update grub
  sudo: yes
  tags:
    - kernel_parameters
    - grub

- name: Flush handlers
  meta: flush_handlers
  tags:
    - grub

# Note 1: restart can be triggered with a command line option: -e "restart_machine=true"
# Note 2: "true" here is a string
- name: restart machine
  command: shutdown -r now "Ansible updates triggered"
  when: restart_machine == "true"
  async: 0
  poll: 0
  ignore_errors: true
  sudo: yes
  tags:
    - restart

- name: Waiting for machines to come back up
  local_action: wait_for host={{ inventory_hostname }}
                state=started
  when: restart_machine == "true"
  tags:
    - restart
